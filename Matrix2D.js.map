{"version":3,"file":"Matrix2D.js","sourceRoot":"","sources":["src/Matrix2D.ts"],"names":[],"mappings":"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","sourcesContent":["import Vector2D from './vector2D';\r\n\r\nclass Matrix2D {\r\n  private _matrix: number[][];\r\n\r\n  constructor(value?: number[][] | Vector2D) {\r\n    if (typeof value === 'undefined') {\r\n      this._matrix = Matrix2D.identity;\r\n    } else if (value instanceof Vector2D) {\r\n      this._matrix = Matrix2D.identity;\r\n      this._matrix[0][0] = value.x;\r\n      this._matrix[1][0] = value.y;\r\n      this._matrix[2][0] = value.w;\r\n    } else {\r\n      this._matrix = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the matrix values\r\n   */\r\n  public get m(): number[][] {\r\n    return this._matrix;\r\n  }\r\n\r\n  public static get empty(): number[][] {\r\n    return [[], [], []];\r\n  }\r\n\r\n  public get toVector(): Vector2D {\r\n    return new Vector2D(this._matrix[0][0], this._matrix[1][0]);\r\n  }\r\n\r\n  /**\r\n   * Initialize an identity matrix\r\n   */\r\n  public static get identity(): number[][] {\r\n    return [\r\n      [1, 0, 0],\r\n      [0, 1, 0],\r\n      [0, 0, 1],\r\n    ];\r\n  }\r\n\r\n  public static add(matrix1: Matrix2D, matrix2: Matrix2D): Matrix2D {\r\n    const result = Matrix2D.empty;\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < 3; j++) {\r\n        result[i][j] = matrix1.m[i][j] + matrix2.m[i][j];\r\n      }\r\n    }\r\n    return new Matrix2D(result);\r\n  }\r\n\r\n  public static subtract(matrix1: Matrix2D, matrix2: Matrix2D): Matrix2D {\r\n    const result = Matrix2D.empty;\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < 3; j++) {\r\n        result[i][j] = matrix1.m[i][j] - matrix2.m[i][j];\r\n      }\r\n    }\r\n    return new Matrix2D(result);\r\n  }\r\n\r\n  public static multiply(matrix1: Matrix2D, matrix2: Matrix2D): Matrix2D {\r\n    const result = Matrix2D.empty;\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < 3; j++) {\r\n        result[i][j] = 0;\r\n        for (let k = 0; k < 3; k++) {\r\n          result[i][j] += matrix1.m[i][k] * matrix2.m[k][j];\r\n        }\r\n      }\r\n    }\r\n    return new Matrix2D(result);\r\n  }\r\n\r\n  public static multiplyByValue(matrix: Matrix2D, value: number): Matrix2D {\r\n    const result = Matrix2D.empty;\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < 3; j++) {\r\n        result[i][j] = matrix.m[i][j] * value;\r\n      }\r\n    }\r\n    return new Matrix2D(result);\r\n  }\r\n\r\n  public static multiplyByVector(matrix: Matrix2D, vector: Vector2D): Vector2D {\r\n    return Matrix2D.multiply(matrix, new Matrix2D(vector)).toVector;\r\n  }\r\n\r\n  public static view(width: number, height: number): Matrix2D {\r\n    const scaleStep = 1; // Scale every vector * scaleStep\r\n    const centerX = width / 2;\r\n    const centerY = height / 2;\r\n    const flipX = Math.cos(Math.PI); // rotate 180deg / 3.14radian around X-axis\r\n\r\n    return new Matrix2D([\r\n      [scaleStep, 0, centerX],\r\n      [0, flipX * scaleStep, centerY],\r\n      [0, 0, 1],\r\n    ]);\r\n  }\r\n\r\n  public static scale(factor: number) {\r\n    return Matrix2D.multiplyByValue(new Matrix2D(), factor);\r\n  }\r\n\r\n  public static rotate(radians: number) {\r\n    const cos = Math.cos(radians);\r\n    const sin = Math.sin(radians);\r\n\r\n    return new Matrix2D([\r\n      [cos, -sin, 0],\r\n      [sin, cos, 0],\r\n      [0, 0, 1],\r\n    ]);\r\n  }\r\n\r\n  public static translate(vector: Vector2D): Matrix2D {\r\n    return new Matrix2D([\r\n      [1, 0, vector.x],\r\n      [0, 1, vector.y],\r\n      [0, 0, vector.w],\r\n    ]);\r\n  }\r\n}\r\n\r\nexport default Matrix2D;\r\n"]}