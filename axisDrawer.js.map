{"version":3,"file":"axisDrawer.js","sourceRoot":"","sources":["src/axisDrawer.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,UAAU;IAIrB;QACE,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAClB,CAAC;IAEM,SAAS,CACd,GAA6B,EAC7B,KAAa,EACb,MAAc;QAEd,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IACD;;;;;OAKG;IACH,QAAQ,CAAC,GAA6B,EAAE,KAAa,EAAE,MAAc;QACnE,IACE,IAAI,CAAC,GAAG,KAAK,SAAS;YACtB,IAAI,CAAC,MAAM,KAAK,SAAS;YACzB,IAAI,CAAC,KAAK,KAAK,SAAS;YAExB,OAAO;QACT,MAAM,CAAC,GAAW,IAAI,CAAC,KAAK,CAAC;QAC7B,MAAM,CAAC,GAAW,IAAI,CAAC,MAAM,CAAC;QAE9B,MAAM,WAAW,GAAG,EAAE,CAAC;QACvB,MAAM,QAAQ,GAAG,GAAG,CAAC;QACrB,MAAM,YAAY,GAAG,EAAE,CAAC;QACxB,MAAM,gBAAgB,GAAG,EAAE,CAAC;QAE5B,cAAc;QACd,GAAG,CAAC,SAAS,EAAE,CAAC;QAChB,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/B,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QACnC,GAAG,CAAC,MAAM,EAAE,CAAC;QAEb,+BAA+B;QAC/B,KACE,IAAI,CAAC,GAAW,WAAW,GAAG,YAAY,EAC1C,CAAC,GAAG,CAAC,GAAG,WAAW,EACnB,CAAC,IAAI,YAAY,EACjB,CAAC;YACD,GAAG,CAAC,SAAS,EAAE,CAAC;YAChB,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC;YAChC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC;YAChC,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,GAAG,CAAC,QAAQ,CACV,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,EACtB,CAAC,GAAG,gBAAgB,EACpB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,gBAAgB,CAC7B,CAAC;QACJ,CAAC;QAED,cAAc;QACd,GAAG,CAAC,SAAS,EAAE,CAAC;QAChB,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,WAAW,CAAC,CAAC;QACnC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,WAAW,CAAC,CAAC;QAC5C,GAAG,CAAC,MAAM,EAAE,CAAC;QAEb,+BAA+B;QAC/B,KACE,IAAI,CAAC,GAAW,WAAW,GAAG,YAAY,EAC1C,CAAC,GAAG,MAAM,GAAG,WAAW,EACxB,CAAC,IAAI,YAAY,EACjB,CAAC;YACD,GAAG,CAAC,SAAS,EAAE,CAAC;YAChB,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,QAAQ,EAAE,CAAC,CAAC,CAAC;YACpC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,QAAQ,EAAE,CAAC,CAAC,CAAC;YACpC,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,GAAG,CAAC,QAAQ,CACV,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,EAC3B,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,gBAAgB,EAChC,CAAC,GAAG,gBAAgB,CACrB,CAAC;QACJ,CAAC;IACH,CAAC;CACF","sourcesContent":["export class AxesDrawer {\r\n  ctx: CanvasRenderingContext2D | undefined;\r\n  width: number | undefined;\r\n  height: number | undefined;\r\n  constructor() {\r\n    this.ctx = undefined;\r\n    this.width = 0;\r\n    this.height = 0;\r\n  }\r\n\r\n  public setValues(\r\n    ctx: CanvasRenderingContext2D,\r\n    width: number,\r\n    height: number\r\n  ) {\r\n    this.ctx = ctx;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n  /**\r\n   * Draw axes on the canvas\r\n   * @param {CanvasRenderingContext2D} ctx - The 2D rendering context for the canvas\r\n   * @param {number} width - The width of the canvas\r\n   * @param {number} height - The height of the canvas\r\n   */\r\n  drawAxes(ctx: CanvasRenderingContext2D, width: number, height: number): void {\r\n    if (\r\n      this.ctx === undefined ||\r\n      this.height === undefined ||\r\n      this.width === undefined\r\n    )\r\n      return;\r\n    const w: number = this.width;\r\n    const h: number = this.height;\r\n\r\n    const axisPadding = 10;\r\n    const tickSize = 105;\r\n    const tickInterval = 10;\r\n    const tickLabelPadding = 10;\r\n\r\n    // Draw x-axis\r\n    ctx.beginPath();\r\n    ctx.moveTo(axisPadding, h / 2);\r\n    ctx.lineTo(w - axisPadding, h / 2);\r\n    ctx.stroke();\r\n\r\n    // Draw x-axis ticks and labels\r\n    for (\r\n      let x: number = axisPadding + tickInterval;\r\n      x < w - axisPadding;\r\n      x += tickInterval\r\n    ) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, h / 2 - tickSize);\r\n      ctx.lineTo(x, h / 2 + tickSize);\r\n      ctx.stroke();\r\n      ctx.fillText(\r\n        (x - w / 2).toString(),\r\n        x - tickLabelPadding,\r\n        h / 2 + 2 * tickLabelPadding\r\n      );\r\n    }\r\n\r\n    // Draw y-axis\r\n    ctx.beginPath();\r\n    ctx.moveTo(width / 2, axisPadding);\r\n    ctx.lineTo(width / 2, height - axisPadding);\r\n    ctx.stroke();\r\n\r\n    // Draw y-axis ticks and labels\r\n    for (\r\n      let y: number = axisPadding + tickInterval;\r\n      y < height - axisPadding;\r\n      y += tickInterval\r\n    ) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(width / 2 - tickSize, y);\r\n      ctx.lineTo(width / 2 + tickSize, y);\r\n      ctx.stroke();\r\n      ctx.fillText(\r\n        (height / 2 - y).toString(),\r\n        width / 2 - 3 * tickLabelPadding,\r\n        y + tickLabelPadding\r\n      );\r\n    }\r\n  }\r\n}\r\n"]}