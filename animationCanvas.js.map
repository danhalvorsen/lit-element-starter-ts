{"version":3,"file":"animationCanvas.js","sourceRoot":"","sources":["src/animationCanvas.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAY,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAW,MAAM,mBAAmB,CAAC;AAGnD,IAAM,eAAe,GAArB,MAAM,eAAgB,SAAQ,UAAU;IAG7C,gCAAgC;IAChC,iBAAiB;IACjB,IAAI;IAEJ,kBAAkB;QAChB,MAAM,OAAO,GAAG,GAAG,EAAE;YACnB,kBAAkB;YAClB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QAChE,CAAC,CAAC;QACF,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;CACF,CAAA;AApBY,eAAe;IAD3B,aAAa,CAAC,kBAAkB,CAAC;GACrB,eAAe,CAoB3B;;AAED,mBAAmB;AAEZ,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAC3C,oCAAoC;IAE3B,gBAAgB;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM;QACJ,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,cAAc,CAC5C,YAAY,CACe,CAAC;QAE9B,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE,CAAC;YAC5C,OAAO;QACT,CAAC;QAED,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,EAAE,CAAC;YACT,OAAO;QACT,CAAC;QACD,GAAG,CAAC,SAAS,GAAG,cAAc,CAAC;QAC/B,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAE7B,GAAG,CAAC,SAAS,GAAG,oBAAoB,CAAC;QACrC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC;CACF,CAAA;AA1BY,aAAa;IADzB,aAAa,CAAC,eAAe,CAAC;GAClB,aAAa,CA0BzB","sourcesContent":["import {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\n@customElement('animation-canvas')\r\nexport class AnimationCanvas extends LitElement {\r\n  private animationFrameId: number | undefined;\r\n\r\n  // override createRenderRoot() {\r\n  //   return this;\r\n  // }\r\n\r\n  startAnimationLoop(): void {\r\n    const animate = () => {\r\n      // animation logic\r\n      this.animationFrameId = window.requestAnimationFrame(animate);\r\n    };\r\n    animate();\r\n  }\r\n\r\n  stopAnimationLoop(): void {\r\n    if (this.animationFrameId) {\r\n      window.cancelAnimationFrame(this.animationFrameId);\r\n    }\r\n  }\r\n}\r\n\r\n// DrawingCanvas.ts\r\n@customElement('canvas-drawer')\r\nexport class DrawingCanvas extends LitElement {\r\n  // methods related to canvas drawing\r\n\r\n  override createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  redraw(): void {\r\n    const canvas = this.shadowRoot?.getElementById(\r\n      'newcanvas2'\r\n    ) as HTMLCanvasElement | null;\r\n\r\n    if (canvas === null || canvas === undefined) {\r\n      return;\r\n    }\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) {\r\n      return;\r\n    }\r\n    ctx.fillStyle = 'rgb(200 0 0)';\r\n    ctx.fillRect(10, 10, 50, 50);\r\n\r\n    ctx.fillStyle = 'rgb(0 0 200 / 50%)';\r\n    ctx.fillRect(30, 30, 50, 50);\r\n  }\r\n}\r\n"]}